library(glasso)
library(ggplots2)
library("ggplots2")
library(ggplot2)
library(ggplot2)
library(ggmap)
library(ggplot2)
library(ggmap)
data(diamonds)
diamonds{1:5]}
diamonds[1:5]
diamonds[1:5,]
dsmall <- diamonds[sample(nrow(diamonds), 300), ]
dsmall
attach(dsmall)
plot(carat, price, data=dsmall)
qplot(carat, price, data=dsmall)
warnings()
qplot(carat, price, data=dsmall, color="clarity")
qplot(carat, price, data=dsmall, color=clarity)
qplot(carat, price, data=dsmall, color=clarity, main="Diamond Prices by Color and Clarity", xlab="Price ($)", ylab="Carat")
qplot(carat, price, data=dsmall, color=clarity, main="Diamond Prices by Color and Clarity", xlab="Price ($)", ylab="Carat" + labs(color="Clarity"), )
qplot(carat, price, data=dsmall, color=clarity, main="Diamond Prices by Color and Clarity", xlab="Price ($)", ylab="Carat" + labs(color="Clarity") )
qplot(carat, price, data=dsmall, color=clarity, main="Diamond Prices by Color and Clarity", xlab="Price ($)", ylab="Carat") labs(color="Clarity")
qplot(carat, price, data=dsmall, color=clarity, main="Diamond Prices by Color and Clarity", xlab="Price ($)", ylab="Carat") + labs(color="Clarity")
qplot(carat, price)
qplot(carat, price, data=dsmall)
qplot(carat, price, data=dsmall, geom = c("point"))
qplot(carat, price, data=dsmall, geom = c("point", smooth))
qplot(carat, price, data=dsmall, geom = c("point", "smooth""))
)
qplot(carat, price, data=dsmall, geom = c("point", "smooth"))
qplot(carat, price, data=dsmall, geom = c("point", "smooth"), method="lm")
qplot(carat, price, data=dsmall, geom = c("point", "smooth"), method="loess")
help(qplot)
help(geom)
??geom
qplot(carat, price, data=dsmall, geom = c("point", "smooth"), method="loess")
qplot(carat, price, data=dsmall, geom = c("point", "smooth"))
qplot(carat, price, data=dsmall, geom = c("point", "smooth"), method="loess")
qplot(carat, price, data=dsmall, geom = c("point", "smooth"), method="lm")
qplot(carat, price, data=dsmall, geom = c("point", "smooth"), method="glm")
qplot(carat, price, data=dsmall, geom = c("point", "smooth"), method="gam")
qplot(carat, price, data=dsmall, geom = c("point", "smooth"), method="lm")
qplot(carat, price, data=dsmall, geom = c("point", "smooth"), method="poly")
qplot(carat, price, data=dsmall, geom = c("point", "smooth"), method="lm")
qplot(carat, price, data=dsmall, geom = c("point", "smooth", "density"), method="lm")
qplot(carat, price, data=dsmall, geom = c("point", "smooth"), method="lm")
qplot(carat, data=diamonds, geom="histogram")
qplot(x.varcarat, data=diamonds, geom="histogram")
qplot(x.var=carat, data=diamonds, geom="histogram")
qplot(x=carat, data=diamonds, geom="histogram")
qplot(x=carat, data=diamonds, geom="density")
qplot(x=carat, data=diamonds, geom=c("density", "point"))
qplot(x=carat, data=diamonds, geom="density")
Table 1: Plotting simple data.
group propsupport
Democrats 0.491
Independents 0.393
Republicans 0.201
to extract a vector of summary statistics you wish to graph and plot them against another
vector you make to keep legends and labels as simple as possible. One example is shown
below:
group<-c("Democrats", "Independents", "Republicans")
propsupport<-c(.491,.393,.201
=
Table 1: Plotting simple data.
group propsupport
Democrats 0.491
Independents 0.393
Republicans 0.201
to extract a vector of summary statistics you wish to graph and plot them against another
vector you make to keep legends and labels as simple as possible. One example is shown
below:
group<-c("Democrats", "Independents", "Republicans")
propsupport<-c(.491,.393,.201=
group<-c("Democrats", "Independents", "Republicans")
propsupport<-c(.491,.393,.201)
propsupport
as.factor(group)
plot(group, propsupport)
plot(as.factor(group), propsupport)
qplot(group, getmean)
getmean
plot(as.factor(group), propsupport, ylim=c(0,1), xlab="Party ID", ylab="Proportion
favoring gay marriage", main="2004 ANES: Opinion of Gay Marriage by Partisanship")
qplot(group, getmean, geom="bar", ylim=c(0,1), xlab="Party ID", ylab="Proportion
favoring gay marriage", main="2004 ANES: Opinion of Gay Marriage by Partisanship")
qplot(group, propsupport)
qplot(group, propsupport, geom="bar")
my.colors=c("dodgerblue", "mediumorchid", "firebrick")
qplot(group, propsupport, fill=my.colors)
qplot(group, propsupport, fill=my.colors, geom="bar")
repswin=c(1.8,3.4,4.6)
p2<-qplot(group,repswin, geom="bar", fill=my.colors)
p2<-qplot(group,repswin, geom="bar", fill=my.colors)
p2
p2<-qplot(group,repswin, geom="bar", fill=my.colors, ylim=c(0,5), xlab="Partisanship", ylab="% agree")
p2<-qplot(group,repswin, geom="bar", fill=my.colors, ylim=c(0,5), xlab="Partisanship", ylab="% agree") + scale_fill_identity()
p2
fix(my.colors)
fix(propsupport)
data(zips)
detach(dsmall_)
detach(dsmall)
attach(zips)
View(zips)
library("rgdal")
install.packages("rdgal")
install.packages("maptools")
library(maptools)
install.packages("rgeos")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("rgdal")
install.packages("sp")
projInfo
library("rgdal")
library("maptools")
library("ggplot2")
library("plyr")
library("sp")
library("sp")
library("rgdal")
library("maptools")
library("ggplot2")
library("plyr")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("classInt")
library("maptools")
library("RColorBrewer")
library("classInt")
install.packages("gpclib")
setwd("~/Dropbox/Twitter/prelims/maps_tutorial_data/")
library("maptools")
library("ggplot2")
library("gpclib")
setwd("~/Dropbox/Twitter/prelims/maps_tutorial_data/")
sport <- readShapePoly("london_sport.shp")
sport
names(sport)
sport@name
sport[name]
sport(name)
sport$name
sport["Bromley"]
sport(Bromley)
sport$Bromley
sport[Bromley]
sport["Brent"]
sport["Brent",]
sport[,"Brent"]
sport$ons_label
sport$name
sport[1]
sport("Bromley")
sport["Bromley", ]
names(sport)
sport@data
print(sport)
attributes(sport)
p<-ggplot(sport@data, aes(Partic_per,Pop_2001))
Partic_Per
Pop_2001
sport@data
aes(Partic_per, Pop_2001)
p
p+geom_point()
p<-ggplot(sport@data, aes(Partic_Per,Pop_2001))
p+geom_point()
p+geom_point(color="red", size=2)
p+geom_point(aes(color=Partic_Per, size=Pop_2001))
gpclibPermit()
names(sport)
sport$ons_label
sport_geom <- fortify(sport, region="ons_label")
sport_geom
sport@proj5
sport@proj4string
sport_geom@names
sport_geom$long
sport_geom@.Data
sport_geom@names
sport_geom <- merge(sport_geom, sport@data, by.x="id", by.y="ons_label")
sport_geom
sport_geom$names
sport_geom
sport_geom[1:5]
sport_geom[1:5,]
sport_geom[1]
sport_geom[,1]
print(sport_geom)
head(sport_geom)
Map <- ggplot(sport_geom, aes(long, lat, group=group, fill=Partic_per))
Map
Map <- ggplot(sport_geom, aes(long, lat, group=group, fill=Partic_per))
+ geom_polygon()
MAP
ggplot(sport_geom, aes(long, lat, group=group, fill=Partic_per)) + geom_polygon()
Map <- ggplot(sport_geom, aes(long, lat, group=group, fill=Partic_Per)) + geom_polygon()
Map
Map <- ggplot(sport_geom, aes(long, lat, group=group, fill=Partic_Per)) +
geom_polygon()
Map <- ggplot(sport_geom, aes(long, lat, group=group, fill=Partic_Per)) +
geom_polygon() + coord_equal()
Map
Map <- ggplot(sport_geom, aes(long, lat, group=group, fill=Partic_Per)) +
geom_polygon()
Map
Map + coord_equal()
Map <- ggplot(sport_geom, aes(long, lat, group=group, fill=Partic_Per)) +
geom_polygon() + coord_equal() + labs(x="Easting(m)", y = "Northing (m)",
fill="% Sport Partic.") +
ggtitle("London Sports Participation")
Map
aes
aes(test, test2)
tester <- aes(test, test2)
tester
tester$x
tester$y
group
